

javaIONameMap ::= [
  "oid" : "Int",
  "tid" : "RowId",
  "xid" : "Int",
  "cid" : "Int",
  "bool" : "Boolean",
  "byte" : "Byte",
  "int2" : "Short",
  "int4" : "Int",
  "int8" : "Long",
  "float4" : "Float",
  "float8" : "Double",
  "text" : "String",
  "name" : "String",
  "bytea" : "Bytes",
  "date" : "Date",
  "time" : "Time",
  "timetz" : "Time",
  "timestamp" : "Timestamp",
  "timestamptz" : "Timestamp",
  "numeric" : "BigDecimal",
  "uuid" : "Object",
  "money" : "BigDecimal",
  "xml" : "SQLXML",
  "json" : "String",
  default : "Object"
]

javaIOCastMap ::= [
  "uuid" : "(java.util.UUID) "
]

javaTypeNameMap ::= [
  "oid" : "Integer",
  "tid" : "RowId",
  "xid" : "Integer",
  "cid" : "Integer",
  "bool" : "Boolean",
  "byte" : "Byte",
  "int2" : "Short",
  "int4" : "Integer",
  "int8" : "Long",
  "float4" : "Float",
  "float8" : "Double",
  "text" : "String",
  "name" : "String",
  "bytea" : "byte[]",
  "date" : "java.sql.Date",
  "time" : "java.sql.Time",
  "timetz" : "java.sql.Time",
  "timestamp" : "java.sql.Timestamp",
  "timestamptz" : "java.sql.Timestamp",
  "numeric" : "java.math.BigDecimal",
  "uuid" : "java.util.UUID",
  "money" : "java.math.BigDecimal",
  "xml" : "java.sql.SQLXML",
  "json" : "String",
  default : key
]

castName(attrInfo) ::= <<
<if (attrInfo.isStruct)>(<attrInfo.typeName>) <else><javaIOCastMap.(attrInfo.typeName)><endif>
>>

prop(attrInfo) ::= <<
private <javaTypeNameMap.(attrInfo.typeName)> <attrInfo.propertyName>;

>>

getSet(attrInfo) ::= <<
public <javaTypeNameMap.(attrInfo.typeName)> get<attrInfo.accessorName>() {
  return <attrInfo.propertyName>;
}

public void set<attrInfo.accessorName>(<javaTypeNameMap.(attrInfo.typeName)> <attrInfo.propertyName>) {
  this.<attrInfo.propertyName> = <attrInfo.propertyName>;
}

>>

main(type,typeInfo,isInPackage,package) ::= <<
<if (isInPackage)>package <package>;<endif>

import java.util.UUID;

import java.sql.SQLData;
import java.sql.SQLInput;
import java.sql.SQLOutput;
import java.sql.SQLException;

import com.impossibl.postgres.api.jdbc.*;
 
public class <typeInfo.className>Type implements SQLData {

  <typeInfo.attributeInfos:prop()>
  
  <typeInfo.attributeInfos:getSet()
  
  >
  
  @Override
  public String getSQLTypeName() {
    return "<type.name>";
  }
  
  @Override
  public void readSQL(SQLInput stream, String typeName) throws SQLException {
    
    <typeInfo.attributeInfos:{attrInfo |<attrInfo.propertyName> = <attrInfo:castName()>in.read<javaIONameMap.(attrInfo.typeName)>();
    }>    
  }
  
  @Override
  public void writeSQL(SQLOutput stream) throws SQLException {
    
    <typeInfo.attributeInfos:{attrInfo |out.write<javaIONameMap.(attrInfo.typeName)>(<attrInfo.propertyName>);
    }>    
  }

}
>>
